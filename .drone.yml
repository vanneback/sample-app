#workspace:
#  base: /go
#  path: src/sample-app
#kind: pipeline
#name: default
#
pipeline:
  test:
    image: golang
    commands: 
    - go vet
    - go test -v -cover
  
  docker:
    image: plugins/docker
    #volumes:
    #  - /var/run/docker.sock:/var/run/docker.sock
    secrets: [ docker_username, docker_password ]
    #base64 target: deploy
    repo: vanneback/sample-app
    auto_tag: false
    tags: 
      - latest
      - v1.0.5 
    when:
      branch: [ prod ]
#        
#  build:
#    image: vanneback/drone-deploy-local-plugin
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    
#    repo: vanneback/sample-app
#    port: 3000
#    container_name: sample
#

  production:
    image: quay.io/honestbee/drone-kubernetes
    deployment: sample-app
    container: sample-app
    namespace: production
    tag: v1.0.5
    repo: vanneback/sample-app
    kubernetes_user: kubernetes-admin
    kubernetes_server: ${KUBERNETES_SERVER}
    kubernetes_cert: ${KUBERNETES_CERT}
    kubernetes_token: ${KUBERNETES_TOKEN_PRODUCTION}
    when:
      branch: [ production ]

  staging:
    image: quay.io/honestbee/drone-kubernetes
    deployment: sample-app
    container: sample-app
    namespace: staging
    tag: v1.0.5
    repo: vanneback/sample-app
    kubernetes_server:
      from_secret: kubernetes_server
    kubernetes_cert:
      from_secret: kubernetes_cert
    kubernetes_token:
      from_secret: kubernetes_token_staging
    #kubernetes_server: https://35.228.83.83  
    #kubernetes_cert: ${KUBERNETES_CERT}
    #kubernetes_token: ${KUBERNETES_TOKEN_STAGING}
    when:
      branch: [ staging ]

 
      
#  deploy:
#    image: lachlanevenson/k8s-kubectl:v1.10.10
#
#    volumes:
#      - /home/emil/.kube/v_kube_conf:/home/emil/.kube/config
#
#    environment:
#      - KUBECONFIG=/home/emil/.kube/config
#    commands:
#      - kubectl apply -f k8s/production.yaml
#      - kubectl apply -f k8s/service.yaml
#      - SELECTOR=$(kubectl get svc sample-app -o jsonpath='{.spec.selector.app}')
#      - kubectl delete pods -l app=$SELECTOR
#      - kubectl rollout status -f k8s/production.yaml      
#
  
#    build:
#    image: docker
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    
#    secrets: [ docker_username, docker_password ]
#    commands:
#      - docker container kill sample-app
#      - docker container rm sample-app
#      - docker run --name=sample-app -d -p 8080:8080 vanneback/sample-app 
#      - echo $DOCKER_USERNAME
#      - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
#      - docker build -t vanneback/sample-app:latest .
#      - docker tag vanneback/sample-app:latest 
#        vanneback/sample-app:$(docker images | awk '($1 == "vanneback/sample-app" && $2 != "latest") {print $2 += .1; exit}')
#      - docker push vanneback/sample-app:latest
#      - docker push vanneback/sample-app:$(docker images | 
#        awk '($1 == "vanneback/sample-app" && $2 != "latest") {print $2; exit}')
#

 
